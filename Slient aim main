repeat task.wait() until game:IsLoaded() and game.Players.LocalPlayer
local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local LocalPlayer = Players.LocalPlayer
local Mouse = LocalPlayer:GetMouse()
local Camera = workspace.CurrentCamera

-- Silent Aim Toggle UI
local gui = Instance.new("ScreenGui", game.CoreGui)
gui.Name = "SilentAimUI"
gui.ResetOnSpawn = false

local frame = Instance.new("Frame", gui)
frame.Size = UDim2.new(0, 160, 0, 80)
frame.Position = UDim2.new(0.5, -80, 0.7, 0)
frame.BackgroundColor3 = Color3.fromRGB(25, 25, 25)
frame.Active = true
frame.Draggable = true
Instance.new("UICorner", frame).CornerRadius = UDim.new(0, 8)

local title = Instance.new("TextLabel", frame)
title.Size = UDim2.new(1, 0, 0.3, 0)
title.Text = "Silent Aim"
title.TextColor3 = Color3.fromRGB(0, 255, 255)
title.TextScaled = true
title.BackgroundTransparency = 1
title.Font = Enum.Font.GothamBold

local toggle = Instance.new("TextButton", frame)
toggle.Size = UDim2.new(0.8, 0, 0.4, 0)
toggle.Position = UDim2.new(0.1, 0, 0.5, 0)
toggle.Text = "Toggle ON"
toggle.TextScaled = true
toggle.Font = Enum.Font.Gotham
toggle.TextColor3 = Color3.new(1, 1, 1)
toggle.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
Instance.new("UICorner", toggle).CornerRadius = UDim.new(0, 6)

local enabled = false
toggle.MouseButton1Click:Connect(function()
	enabled = not enabled
	toggle.Text = enabled and "Toggle OFF" or "Toggle ON"
	toggle.BackgroundColor3 = enabled and Color3.fromRGB(255, 0, 0) or Color3.fromRGB(30, 30, 30)
end)

-- Core silent aim logic
local function getClosestNPCToCursor()
	local closest = nil
	local shortestDist = math.huge

	for _, obj in pairs(workspace:GetDescendants()) do
		if obj:IsA("Model") and obj:FindFirstChild("Humanoid") and obj:FindFirstChild("Head") and obj ~= LocalPlayer.Character then
			local pos, visible = Camera:WorldToViewportPoint(obj.Head.Position)
			if visible then
				local dist = (Vector2.new(pos.X, pos.Y) - Vector2.new(Mouse.X, Mouse.Y)).Magnitude
				if dist < shortestDist then
					shortestDist = dist
					closest = obj
				end
			end
		end
	end

	return closest
end

-- Hook into raycast to always hit NPC head
local old; old = hookmetamethod(game, "__namecall", function(self, ...)
	local args = {...}
	if enabled and getnamecallmethod() == "FindPartOnRayWithIgnoreList" then
		local target = getClosestNPCToCursor()
		if target then
			local origin = Camera.CFrame.Position
			local direction = (target.Head.Position - origin).Unit * 1000
			args[1] = Ray.new(origin, direction)
			return old(self, unpack(args))
		end
	end
	return old(self, ...)
end)
